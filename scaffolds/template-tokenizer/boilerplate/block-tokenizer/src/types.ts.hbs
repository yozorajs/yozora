import type { IYastParent } from '@yozora/ast'
import type {
  IBaseBlockTokenizerProps,
  IPartialYastBlockToken,
  ITokenizer,
  IYastBlockToken,
} from '@yozora/core-tokenizer'

export const {{{pascalCase tokenizerName}}}Type = '{{{camelCase tokenizerName}}}'
export type T = typeof {{{pascalCase tokenizerName}}}Type

export const uniqueName = '{{{packageName}}}'

export type INode = IYastParent<T>

export interface IToken extends IPartialYastBlockToken<T> {
  /**
   * CodePoint of '?' / '!'
   */
  marker: number
  /**
   * Whether there are no internal spaces between marker characters
   */
  continuous: boolean
  /**
   *
   */
  children: IYastBlockToken[]
}

export type IThis = ITokenizer

export type ITokenizerProps = Partial<IBaseBlockTokenizerProps>
