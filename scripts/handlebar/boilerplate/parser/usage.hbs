## Install

* npm

  ```bash
  npm install --save {{packageName}}
  ```

* yarn

  ```bash
  yarn add {{packageName}}
  ```


## Usage

* Basic

  ```typescript
  import {{{parserName}}} from '{{{packageName}}}'

  const parser = new {{{parserName}}}()

  // parse markdown source content.
  parser.parse('source markdown content')

  // parse markdown source content with custom options.
  parser.parse(
    'source markdown content',  // markdown source contents, `string|Iterable<string>`
    {},                         // IParseOptions, optional.
  )

  // parse multiple markdown source content pieces.
  parser.parse(['source', 'contents'])
  ```

* Use withing generator: 

  ```typescript
  import {{{parserName}}} from '{{{packageName}}}'

  const parser = new {{{parserName}}}()

  /**
   * String stream is supported through the iterator API.
   */
  function* source () {
    yield 'hello',
    yield 'world',
  }

  parser.parse(source())
  ```

### Options

* Constructor Options

  Name                      | Type                      | Required  | Description
  :-------------------------|:--------------------------|:----------|:------------
  `blockFallbackTokenizer`  | `IBlockFallbackTokenizer`  | `false`   | Fallback tokenizer on processing block structure phase
  `inlineFallbackTokenizer` | `IInlineFallbackTokenizer` | `false`   | Fallback tokenizer on processing inline structure phase
  `defaultParseOptions`     | `IParseOptions`            | `false`   | Default options for `parse()`

* `IParseOptions`

  Name                        | Type                                      | Required  | Description
  :---------------------------|:------------------------------------------|:----------|:------------
  `shouldReservePosition`     | `boolean`                                 | `false`   | Whether it is necessary to reserve the position in the IYastNode produced
  `presetDefinitions`         | `Array<Omit<Definition, 'type'>`          | `false`   | Preset definitions
  `presetFootnoteDefinitions` | `Array<Omit<FootnoteDefinition, 'type'>`  | `false`   | Preset footnote definition